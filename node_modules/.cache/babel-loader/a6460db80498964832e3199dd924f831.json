{"ast":null,"code":"import _classCallCheck from \"/Users/clairepeng/Documents/Developer/thinkific_1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clairepeng/Documents/Developer/thinkific_1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clairepeng/Documents/Developer/thinkific_1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clairepeng/Documents/Developer/thinkific_1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clairepeng/Documents/Developer/thinkific_1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/clairepeng/Documents/Developer/thinkific_1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/clairepeng/Documents/Developer/thinkific_1/client/src/components/Register.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport TextField from \"material-ui/TextField\";\nimport { apiBaseUrl } from \"../services/api\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleRegister = function () {\n      if (!_this.state.email || !_this.state.password) {\n        alert(\"email or password cannot be empty\");\n        return;\n      } //To be done:check for empty values before hitting submit\n\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var payload = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n      axios.post(apiBaseUrl + \"/register\", payload).then(function (response) {\n        if (response.status === 200) {\n          alert(\"Registration was successful. Please login.\");\n          self.props.history.push(\"/login\");\n        }\n      }).catch(function (error) {\n        alert(\"email taken. Please choose a different one.\", error);\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        title: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        text: \"email\",\n        hintText: \"Enter your email\",\n        floatingLabelText: \"User Name\",\n        onChange: function onChange(event, newValue) {\n          return _this2.setState({\n            email: newValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        type: \"password\",\n        hintText: \"Enter your Password\",\n        floatingLabelText: \"Password\",\n        onChange: function onChange(event, newValue) {\n          return _this2.setState({\n            password: newValue\n          });\n        },\n        onKeyPress: function onKeyPress(event) {\n          if (event.key === \"Enter\") {\n            _this2.handleRegister();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(RaisedButton, {\n        label: \"Submit\",\n        primary: true,\n        style: style,\n        onClick: function onClick(event) {\n          return _this2.handleRegister();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Have an account? \", React.createElement(\"a\", {\n        href: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar style = {\n  margin: 15\n};\nexport default Register;","map":{"version":3,"sources":["/Users/clairepeng/Documents/Developer/thinkific_1/client/src/components/Register.js"],"names":["React","Component","axios","MuiThemeProvider","AppBar","RaisedButton","TextField","apiBaseUrl","Register","props","handleRegister","state","email","password","alert","self","payload","post","then","response","status","history","push","catch","error","event","newValue","setState","key","style","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport TextField from \"material-ui/TextField\";\nimport { apiBaseUrl } from \"../services/api\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleRegister = () => {\n    if (!this.state.email || !this.state.password) {\n      alert(\"email or password cannot be empty\");\n      return;\n    }\n    //To be done:check for empty values before hitting submit\n    const self = this;\n    var payload = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    axios\n      .post(apiBaseUrl + \"/register\", payload)\n      .then(response => {\n        if (response.status === 200) {\n          alert(\"Registration was successful. Please login.\");\n          self.props.history.push(\"/login\");\n        }\n      })\n      .catch(error => {\n        alert(\"email taken. Please choose a different one.\", error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider>\n          <div>\n            <AppBar title=\"Register\" />\n            <TextField\n              text=\"email\"\n              hintText=\"Enter your email\"\n              floatingLabelText=\"User Name\"\n              onChange={(event, newValue) => this.setState({ email: newValue })}\n            />\n            <br />\n            <TextField\n              type=\"password\"\n              hintText=\"Enter your Password\"\n              floatingLabelText=\"Password\"\n              onChange={(event, newValue) =>\n                this.setState({ password: newValue })\n              }\n              onKeyPress={event => {\n                if (event.key === \"Enter\") {\n                  this.handleRegister();\n                }\n              }}\n            />\n            <br />\n            <RaisedButton\n              label=\"Submit\"\n              primary={true}\n              style={style}\n              onClick={event => this.handleRegister()}\n            />\n            <h4>\n              Have an account? <a href=\"/login\">Login</a>\n            </h4>\n          </div>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst style = {\n  margin: 15\n};\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}