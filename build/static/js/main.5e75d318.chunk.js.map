{"version":3,"sources":["services/api.js","components/Login.js","components/Register.js","components/Integers.js","components/Account.js","services/privateRoute.js","services/history.js","App.js","serviceWorker.js","index.js"],"names":["apiBaseUrl","Login","state","email","password","buttonLabel","isLogin","handleLogin","self","Object","assertThisInitialized","_this","payload","axios","post","then","response","status","token","data","Authorization","Cookies","set","props","history","push","window","location","reload","catch","error","alert","_this2","this","react_default","a","createElement","MuiThemeProvider_default","className","index_es","hintText","floatingLabelText","onChange","event","newValue","setState","type","onKeyPress","key","label","primary","onClick","href","Component","Register","handleRegister","text","get","Integers","integer","value","loading","getInteger","headers","authorization","displayInteger","err","incrementInteger","handleChange","target","setInteger","maxNumber","Number","MAX_SAFE_INTEGER","put","current","buttonState","disabled","Account","logout","remove","style","styles","components_Integers","right","height","position","cursor","fontSize","paddingRight","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","pathname","from","createBrowserHistory","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Router","privateRoute_PrivateRoute","path","exact","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e75d318.chunk.js","sourcesContent":["// export const apiBaseUrl = \"//localhost:3000/api/user\"; // Local\nexport const apiBaseUrl = \"https://thinkific-server.herokuapp.com/api/user\"; // Production","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { apiBaseUrl } from \"../services/api\";\n\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { RaisedButton, TextField} from \"material-ui\";\n\nclass Login extends Component {\n    state = {\n      email: \"\",\n      password: \"\",\n      buttonLabel: \"Register\",\n      isLogin: true\n    };\n\n  handleLogin = () => {\n    const self = this;\n    const payload = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    axios\n      .post(apiBaseUrl + \"/login\", payload)\n      .then(response => {\n        if (response.status === 200) {\n          const token = response.data.Authorization;\n          Cookies.set(\"auth\", token);\n          self.props.history.push(\"/account\");\n          window.location.reload();\n        }\n      })\n      .catch(error => {\n        alert(error.response.data);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider>\n          <div>\n            <div className=\"nav\">LOGIN</div>\n            <TextField\n              hintText=\"Enter your email\"\n              floatingLabelText=\"Email\"\n              onChange={(event, newValue) => this.setState({ email: newValue })}\n            />\n            <br />\n            <TextField\n              type=\"password\"\n              hintText=\"Enter your Password\"\n              floatingLabelText=\"Password\"\n              onChange={(event, newValue) =>\n                this.setState({ password: newValue })\n              }\n              onKeyPress={event => {\n                if (event.key === \"Enter\") {\n                  this.handleLogin();\n                }\n              }}\n            />\n            <br />\n            <RaisedButton\n              label=\"Login\"\n              primary={true}\n              onClick={() => this.handleLogin()}\n            />\n            <br />\n            <h4>\n              Don't Have An Account? <a href=\"/register\">Click here to register.</a>\n            </h4>\n          </div>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { apiBaseUrl } from \"../services/api\";\n\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { RaisedButton, TextField} from \"material-ui\";\n\nclass Register extends Component {\n    state = {\n      email: \"\",\n      password: \"\"\n  }\n\n  handleRegister = () => {\n    if (!this.state.email || !this.state.password) {\n      alert(\"Email or Password cannot be empty\");\n      return;\n    }\n    const self = this;\n    var payload = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    axios\n      .post(apiBaseUrl + \"/register\", payload)\n      .then(response => {\n        if (response.status === 200) {\n          alert(\"Registration was successful. You will be redirected to the login page.\");\n          self.props.history.push(\"/login\");\n        }\n      })\n      .catch(error => {\n        alert(error.response.data);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider>\n          <div>\n            <div className=\"nav\">REGISTER</div>\n            <TextField\n              text=\"email\"\n              hintText=\"Enter your email\"\n              floatingLabelText=\"Email\"\n              onChange={(event, newValue) => this.setState({ email: newValue })}\n            />\n            <br />\n            <TextField\n              type=\"password\"\n              hintText=\"Enter your Password\"\n              floatingLabelText=\"Password\"\n              onChange={(event, newValue) =>\n                this.setState({ password: newValue })\n              }\n              onKeyPress={event => {\n                if (event.key === \"Enter\") {\n                  this.handleRegister();\n                }\n              }}\n            />\n            <br />\n            <RaisedButton\n              label=\"Register\"\n              primary={true}\n              onClick={() => this.handleRegister()}\n            />\n            <h4>\n              Have an account? <a href=\"/login\">Login</a>\n            </h4>\n          </div>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { apiBaseUrl } from \"../services/api\";\nimport { RaisedButton, TextField, CircularProgress } from \"material-ui\";\n\nconst payload = Cookies.get(\"auth\");\n\nclass Integers extends Component {\n  state = {\n    integer: \"\",\n    value: \"\",\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getInteger();\n  }\n\n  getInteger = () => {\n    axios\n      .get(apiBaseUrl + \"/current\", {\n        headers: {\n          authorization: payload\n        }\n      })\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({\n            integer: response.data.integer,\n            loading: false\n          });\n          this.displayInteger();\n        }\n      })\n      .catch(err => {\n        alert(err.response.data);\n      });\n  };\n\n  displayInteger = () => {\n    const data = this.state.integer;\n    if (data > -1) {\n      return <div>Current Integer: {data}</div>;\n    }\n  };\n\n  incrementInteger = () => {\n    this.setState({\n      loading: true\n    });\n    axios\n      .get(apiBaseUrl + \"/next\", {\n        headers: {\n          authorization: payload\n        }\n      })\n      .then(() => {\n        this.getInteger();\n      })\n      .catch(err => {\n        alert(err.response.data);\n      });\n  };\n\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  setInteger = () => {\n    this.setState({\n      loading: true\n    })\n    const value = this.state.value;\n    const maxNumber = Number.MAX_SAFE_INTEGER;\n    if (value > -1 && value < maxNumber) {\n      axios\n        .put(\n          apiBaseUrl + \"/current\",\n          { current: value },\n          {\n            headers: {\n              authorization: payload\n            }\n          }\n        )\n        .then(() => {\n          this.setState({\n            value: \"\"\n          });\n          this.getInteger();\n        })\n        .catch(err => {\n          alert(err.response.data);\n        });\n    } else {\n      alert(\"Cannot set integer to null or negative\");\n      return;\n    }\n  };\n\n  render() {\n    // Button style\n    const buttonState = this.state.value === \"\" || this.state.value === null || this.state.value < 0 ? true : false;\n    return (\n      <div>\n        <div>{this.displayInteger()}</div>\n        <br/>\n        {this.state.loading ?\n          <CircularProgress/> :\n          <RaisedButton\n            primary={true}\n            label=\"Next Integer\"\n            onClick={() => this.incrementInteger()}\n          >\n        </RaisedButton>}\n        \n        <br/>\n        <TextField\n          type=\"number\"\n          hintText=\"New Integer\"\n          floatingLabelText=\"New Integer\"\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n        <RaisedButton\n          primary={true}\n          label=\"Reset Integer\"\n          disabled={buttonState}\n          onClick={() => this.setInteger()}\n          >\n        </RaisedButton>\n      </div>\n    );\n  }\n}\n\nexport default Integers;\n","import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\n\nimport Integers from \"./Integers\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\n\nclass Account extends Component {\n  logout = () => {\n    // Clear session\n    Cookies.remove(\"auth\");\n    this.props.history.push(\"/login\");\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div>\n          <div className=\"nav\">My Account\n          <span\n            style={styles.logout}\n            onClick={() => {\n                this.logout();\n              }}\n            >\n              Logout\n            </span>\n          </div>\n          <br />\n          <Integers />\n          <br />\n\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = {\n  logout: {\n    right:'0',\n    height: '60px',\n    position:'fixed',\n    cursor: 'pointer',\n    fontSize: '20px',\n    paddingRight: '10px'\n  }\n}\n\nexport default Account;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Cookies.get(\"auth\") ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: \"/login\", state: { from: props.location } }}\n        />\n      )\n    }\n  />\n);\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React, { Component } from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Account from \"./components/Account\";\nimport { PrivateRoute } from \"./services/privateRoute\";\nimport { history } from \"./services/history\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <PrivateRoute  path=\"/account\" component={Account} />\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}